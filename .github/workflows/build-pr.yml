name: Bygg pull request

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
      - 'dev/**'

jobs:
  build:
    name: Bygg pull-request
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
#          private-key: ${{ secrets.REPO_CLONER_PRIVATE_KEY }}
#          app-id: ${{ secrets.REPO_CLONER_APP_ID }}
          private-key: ${{ secrets.K9SAKSBEHANDLING_PRIVATE_KEY }}
          app-id: ${{ secrets.K9SAKSBEHANDLING_APP_ID }}
      - name: init postgres
        run: |
          export PGPASSWORD='postgres'
          psql -h localhost -p 5432 -U 'postgres' <<EOSQL
            CREATE DATABASE k9sak_unit;
            CREATE USER k9sak_unit WITH PASSWORD 'k9sak_unit';
            GRANT ALL PRIVILEGES ON DATABASE k9sak_unit TO k9sak_unit;
            \connect k9sak_unit;
            create extension if not exists btree_gist;
          EOSQL
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.11
#      - name: Set cache key
#        run: |
#          echo "::set-env name=CACHE_KEY::$(expr $(date +%V) - 1 + 1)"
#          echo "::set-env name=PREVIOUS_CACHE_KEY::$(expr $(date +%V) - 1)"
#      - uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ env.CACHE_KEY }}
#          restore-keys: |
#            ${{ runner.os }}-maven-${{ env.PREVIOUS_CACHE_KEY }}

#      - name: Build
#        shell: bash
#        run: |
#          mvn package --batch-mode --file pom.xml -DtrimStackTrace=false
#        env:
#          GITHUB_TOKEN: ${{ steps.get-token.outputs.token }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }} 
#          DATASOURCE_HOST: localhost
#          DATASOURCE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

      - name: Trigger verdikjede test
        shell: bash
        run: |
          curl -XPOST -u "x-access-token:${{ steps.get-token.outputs.token }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/navikt/k9-verdikjede/actions/workflows/build.yml/dispatches \
          -d '{"ref":"master"}'
