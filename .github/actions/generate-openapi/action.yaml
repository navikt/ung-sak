name: Generate openapi
description: Generate new openapi spec, and generate typescript from it.
inputs:
  patchVersion:
    description: The TAG environment variable from the master build workflow (TIMESTAMP-SHA)
    required: true
  readerToken:
    description: The secrets.READER_TOKEN allowing read of internal packages.
    required: true
  githubToken:
    description: The github token for the workflow, allowing read of repo, and publishing npm package to github registry.
    required: true
  forcePublish:
    description: If 'true', generate new client and publish it even if there are no changes to generated openapi.json
    default: 'false'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Setup java and maven
      uses: navikt/sif-gha-workflows/.github/actions/maven/setup-java-and-maven@main
      with:
        github-token: ${{ inputs.readerToken }}
    - name: Maven install
      uses: navikt/sif-gha-workflows/.github/actions/maven/test-and-build@main
      with:
        skip-tests: true
    - name: Openapi generate
      shell: bash
      run: mvn exec:java --projects web
    - name: Openapi version
      shell: bash
      # extract version number from generated openapi.json
      run: |
        echo "OPENAPI_VERSION=$(jq --exit-status --raw-output '.info.version | capture("^(?<major>\\d+)\\.(?<minor>\\d+)$") | .major + "." + .minor' ./web/src/main/resources/openapi-ts-client/k9-sak.openapi.json || echo 'FEIL')" >> $GITHUB_ENV
    - name: Feilsjekk OPENAPI_VERSION
      if: "${{ env.OPENAPI_VERSION == 'FEIL'}}"
      uses: actions/github-script@v7
      with:
        script: |
          core.setFailed('fant ikkje korrekt openapi version frÃ¥ k9-sak.openapi.json')
    # Commit changes to k9-sak.openapi.json and create flag that signals if there actually was changes
    - name: Commit api endringer
      id: change-commit
      shell: bash
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add --force web/src/main/resources/openapi-ts-client/k9-sak.openapi.json
        (git diff --quiet --staged && echo "haschanged=false" >> $GITHUB_OUTPUT) || 
        (git commit -m "k9-sak.openapi.json updated by build pipeline" && echo "haschanged=true" >> $GITHUB_OUTPUT)
        git push
    - name: Typescript generate
      if: steps.change-commit.outputs.haschanged == true || inputs.forcePublish == 'true'
      uses: navikt/openapi-ts-clientmaker@main
      with:
        openapi-spec-file: web/src/main/resources/openapi-ts-client/k9-sak.openapi.json
        package-json-file: web/src/main/resources/openapi-ts-client/package.json
        package-json-version: "${{ env.PACKAGE_JSON_VERSION }}"
        out-dir: web/target/ts-client
        client-name: K9SakClient
      env:
        PACKAGE_JSON_VERSION: "${{ env.OPENAPI_VERSION }}.${{ inputs.patchVersion }}"
    - name: Publish typescript client
      if: steps.change-commit.outputs.haschanged == true || inputs.forcePublish == 'true'
      shell: bash
      working-directory: web/target/ts-client
      run: |
        corepack enable
        yarn config set npmScopes.navikt.npmRegistryServer "https://npm.pkg.github.com"
        yarn config set npmScopes.navikt.npmAlwaysAuth true
        yarn config set npmScopes.navikt.npmAuthToken $NODE_AUTH_TOKEN
        yarn install --immutable-cache
        yarn npm publish
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: 'false' # yarn install must fill inn the boilerplate needed for yarn publish.
        NODE_AUTH_TOKEN: ${{ inputs.githubToken }}
